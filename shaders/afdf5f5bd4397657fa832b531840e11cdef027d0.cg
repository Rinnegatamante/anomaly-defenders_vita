// profile sce_vp_psp2

#define _ANDROID
#define DENORMALIZATION
#define SKINNING


#ifdef TEXTURE
	#endif

#ifdef TEXTURE
	#endif

uniform float4x4 ModelViewProjMatrix;
uniform float4 ConstantColor;
uniform float4 MappingScale;
uniform float4 MappingOffset;

#ifdef DENORMALIZATION
	uniform float4 VertexDenormalizationBox[2];
#endif

#ifdef SKINNING

#ifdef _ANDROID
	uniform float4 BoneMatrices[3*32];
#else
	uniform float4 BoneMatrices[3*64];
#endif

#endif

void main(
	float3 Position,
	float2 UV0,
	float4 BlendWeight,
	float4 BlendIndices,
	float4 out colorVarying : COLOR,
	float4 out uv0Varying : TEXCOORD0,
	float4 out gl_Position : POSITION
) {
#ifdef DENORMALIZATION
	float3 pos=VertexDenormalizationBox[0].xyz+Position*VertexDenormalizationBox[1].xyz;
#else
	float3 pos=Position;
#endif

#ifdef SKINNING
	#ifdef MULTI_BONE_SKINNING
		int bix=int(BlendIndices.x);
		int biy=int(BlendIndices.y);
		int biz=int(BlendIndices.z);
		int biw=int(BlendIndices.w);
		float4 va=BoneMatrices[bix]*BlendWeight.x, vb=BoneMatrices[bix+1]*BlendWeight.x, vc=BoneMatrices[bix+2]*BlendWeight.x;
		va+=BoneMatrices[biy]*BlendWeight.y;
vb+=BoneMatrices[biy+1]*BlendWeight.y;
vc+=BoneMatrices[biy+2]*BlendWeight.y;
		va+=BoneMatrices[biz]*BlendWeight.z;
vb+=BoneMatrices[biz+1]*BlendWeight.z;
vc+=BoneMatrices[biz+2]*BlendWeight.z;
		va+=BoneMatrices[biw]*BlendWeight.w;
vb+=BoneMatrices[biw+1]*BlendWeight.w;
vc+=BoneMatrices[biw+2]*BlendWeight.w;
	#else
		int bix=int(BlendIndices.x);
		float4 va=BoneMatrices[bix], vb=BoneMatrices[bix+1], vc=BoneMatrices[bix+2];
	#endif

	float4 pos4In=float4(pos,1.0);
	pos=float3(dot(pos4In,va),dot(pos4In,vb),dot(pos4In,vc));
#endif

    gl_Position = mul(float4(pos,1),ModelViewProjMatrix);
    colorVarying = ConstantColor;
#ifdef TEXTURE
	uv0Varying = float4(UV0,UV0)*MappingScale+MappingOffset;
#endif
}
